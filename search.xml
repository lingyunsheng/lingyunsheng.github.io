<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/archives/16107.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external nofollow noopener noreferrer">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external nofollow noopener noreferrer">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external nofollow noopener noreferrer">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external nofollow noopener noreferrer">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external nofollow noopener noreferrer">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external nofollow noopener noreferrer">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external nofollow noopener noreferrer">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="external nofollow noopener noreferrer">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>css总结</title>
    <url>/archives/5aa0734.html</url>
    <content><![CDATA[<h2 id="css新特性"><a href="#css新特性" class="headerlink" title="css新特性"></a>css新特性</h2><p>CSS3<br>    三大特性<br>        覆盖性<br>        继承性<br>        优先级<br>            基本选择器<br>                ID选择器<br>                类选择器<br>                标签选择器<br>                属性选择器<br>            伪类选择器<br>                结构伪类<br>                伪元素<br>            组合选择器<br>                相邻元素选择器<br>                兄弟选择器<br>                子选择器<br>                后代选择器<br>    属性<br>        transform<br>        transition<br>        animation<br>        box-shadow/text-shadow<br>    常见问题<br>        nth-child和nth-of-type<br>        css三大特性<br>            层叠性<br>                css样式冲突<br>                css样式冲突采取的原则，后者覆盖前者<br>            继承性<br>                继承性的样式<br>            常见选择器的叠加值<br>        div宽度100% 设置属性margin-left和margin-right的问题<br>        过渡transition不能给z-index非过渡属性<br>        开启了性能加速的属性<br>        flex：0 1 25%<br>        BFC、IFC</p>
]]></content>
  </entry>
  <entry>
    <title>sss</title>
    <url>/archives/64e805a8.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>前端今日学习</title>
    <url>/archives/b2df75d3.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>js深入浅出</title>
    <url>/archives/7448dd44.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>前端总结</title>
    <url>/archives/d5357d7d.html</url>
    <content><![CDATA[<h1 id="前端工程化"><a href="#前端工程化" class="headerlink" title="前端工程化"></a>前端工程化</h1><p>本文转载于掘金<a href="https://juejin.im/post/6892003555818143752#comment" target="_blank" rel="external nofollow noopener noreferrer">https://juejin.im/post/6892003555818143752#comment</a></p>
<h1 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h1><h1 id="统一规范"><a href="#统一规范" class="headerlink" title="统一规范"></a>统一规范</h1><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><h1 id="监控"><a href="#监控" class="headerlink" title="监控"></a>监控</h1><h1 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h1><h1 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h1>]]></content>
  </entry>
  <entry>
    <title>双十一活动页面总结</title>
    <url>/archives/3192c71d.html</url>
    <content><![CDATA[<h1 style="text-align:center">双十一活动M端</h1>


<p>从十月到现在一直在忙双十一活动，现在复盘回忆一下，整体的开发和学习到的地方以及，有哪些需要优化改进的地方<br>可以点击链接查看具体活动详情页面<a href="http://m.zxxk.com/activity/20201111" target="_blank" rel="external nofollow noopener noreferrer">点击</a></p>
<h1 style="text-align:center">css移动端适配</h1>
]]></content>
  </entry>
  <entry>
    <title>微信小程序转uni-app</title>
    <url>/archives/5ab8cddf.html</url>
    <content><![CDATA[<p>首先安装一个将微信小程序 转换成 uni-app 的插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g miniprogram-to-uniapp</span><br><span class="line">// 转化成 uniapp</span><br><span class="line">$ wtu -i ./miniprogram-project</span><br><span class="line"></span><br><span class="line">// vant</span><br><span class="line">$ wtu -i ./miniprogram-to-uniapp -z</span><br><span class="line"></span><br><span class="line">// 将wxss合并 vue文件</span><br><span class="line">$ wtu -i /miniprogram-project -m</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>路由在前端有什么特殊意义</title>
    <url>/archives/dcb458b8.html</url>
    <content><![CDATA[<h3 id="什么是路由"><a href="#什么是路由" class="headerlink" title="什么是路由"></a>什么是路由</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">负责响应网络资源的服务，当浏览器地址栏中url发生变化，会请求网络资源，处理这种服务就叫做路由</span><br><span class="line">早期服务端处理，演变成路由模块前端控制，前后端分离和单页应用基石，请看深入理解路由</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">路由解释</span><br><span class="line"></span><br><span class="line">路由(routing)就是通过互联的网络把信息从源地址传输到目的地址的活动路由中有一个非常重要的概念叫路由表</span><br><span class="line"></span><br><span class="line">路由表本质上就是一个映射表, 决定了数据包的指向</span><br><span class="line"></span><br><span class="line">路由器</span><br><span class="line"></span><br><span class="line">路由器提供了两种机制: 路由和转送.</span><br><span class="line"></span><br><span class="line">路由是决定数据包从来源到目的地的路径转送将输入端的数据转移到合适的输出端</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">路由是根据不同的ur地址展示不同的内容或页面;</span><br><span class="line">路由是一个比较广义和抽象的概念, 路由的本质就是对应关系</span><br></pre></td></tr></table></figure>
<p>路由，早期整个HTML页面都是由服务器来渲染的，服务器直接将渲染好对应的HTML页面，响应给客户端展示</p>
<p>浏览器每次url变化 向服务器发出请求 刷新页面， 前后端不分离 维护难度大</p>
<p>前端路由：ajax出现 前后端分离， 后端提供API，前端渲染数据</p>
<p>单页面框架SPA：</p>
<p>SPA是 single page web application 的简称, 译为单页Web应用简单说 SPA 就是一个 web 项目只有一个 html 页面, 一旦页面加载完成, SPA 不会因为用户的操作进行页面的重新加载或跳转取而代之的是利用 JS 动态的变换 html 的内容, 从而模拟多个视图间跳转<br>单页面富应用 (SPA)</p>
<p>其实SPA最主要的特点就是在前后端分离的基础上加了一层前端路由也就是前端来维护一套路由规则</p>
<h3 id="路由的两种实现方式"><a href="#路由的两种实现方式" class="headerlink" title="路由的两种实现方式"></a>路由的两种实现方式</h3><h4 id="hash路由"><a href="#hash路由" class="headerlink" title="hash路由"></a>hash路由</h4><p>hash值变化不会触发浏览器发送请求<br>hash值就是url“#”后面的内容， location.href独写hash值<br>监听路由变化，window对象的hashchange事件，占用hash值，默认页面滚动失效，需调用BOM</p>
<h4 id="historty路由"><a href="#historty路由" class="headerlink" title="historty路由"></a>historty路由</h4><p>html5提供的history对象<br>history对象的两个方法pushState()和history.replaceState()在页面不刷新操作浏览器历史记录<br>两个区别：新增历史记录与直接替换的区别<br>监听url变化，通过popstate来实现，手动触发页面渲染，无法拦截默认请求</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span><br><span class="line">  &lt;title&gt;window.history路由&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div id=<span class="string">"routerLink"</span>&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;button onclick=<span class="string">"historyChange('home')"</span>&gt;首页(<span class="built_in">history</span>)/button&gt;</span><br><span class="line">          &lt;button onclick=<span class="string">"historyChange('about')"</span>&gt;关于(<span class="built_in">history</span>)&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;button onclick=<span class="string">"hashChange('home')"</span>&gt;首页(<span class="built_in">hash</span>)&lt;/button&gt;</span><br><span class="line">        &lt;button onclick=<span class="string">"hashChange('about')"</span>&gt;关于(<span class="built_in">hash</span>)&lt;/button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;div id=<span class="string">"routerView"</span>&gt;</span><br><span class="line"></span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;!-- 2.创建子视图模板 --&gt;</span><br><span class="line">  &lt;template id=<span class="string">"home"</span>&gt;</span><br><span class="line">    &lt;div&gt;hello,我是首页&lt;/div&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">  &lt;template id=<span class="string">"about"</span>&gt;</span><br><span class="line">    &lt;div&gt;hello,我是关于&lt;/div&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    //1.首先创建路由表</span><br><span class="line">    const routerTable = [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'home'</span>,</span><br><span class="line">        component: <span class="string">'#home'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">'about'</span>,</span><br><span class="line">        component: <span class="string">'#about'</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    //*********** 方式一：window.history **************</span><br><span class="line">    //3.（window.history）监听路由更改，根据新路由path加载对应的内容</span><br><span class="line">    <span class="keyword">function</span> historyChange(path) &#123;</span><br><span class="line">      render(&#123; path: path &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    //添加popstate状态监听</span><br><span class="line">    window.addEventListener(<span class="string">'popstate'</span>, <span class="keyword">function</span> (e) &#123;</span><br><span class="line">      <span class="keyword">if</span> (e) &#123;</span><br><span class="line">        render(&#123; path: e.state, isPush: <span class="literal">false</span> &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    //************** 方式二：location.hash ***************</span><br><span class="line">    <span class="keyword">function</span> hashChange(path) &#123;</span><br><span class="line">      render(&#123; path: path, mode: <span class="string">'hash'</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    //添加hashchange监听</span><br><span class="line">    window.addEventListener(<span class="string">'hashchange'</span>, <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">      <span class="built_in">let</span> path = location.hash</span><br><span class="line">      //path移除开始的<span class="comment">#</span></span><br><span class="line">      render(&#123; path: path.substring(1, path.length - 2), mode: <span class="string">'hash'</span> &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    //**************公共方法*******************</span><br><span class="line">    //渲染方法</span><br><span class="line">    <span class="keyword">function</span> render(data) &#123;</span><br><span class="line">      //默认值，mode默认为<span class="built_in">history</span>，isPush=<span class="literal">true</span>，isReplace=<span class="literal">false</span>,path=home</span><br><span class="line">      data = Object.assign(&#123; mode: <span class="string">'history'</span>, isPush: <span class="literal">true</span>, isReplace: <span class="literal">false</span>, path: <span class="string">'home'</span> &#125;, data)</span><br><span class="line">      <span class="keyword">if</span> (data.path) &#123;</span><br><span class="line">        //查询路由信息</span><br><span class="line">        const route = routerTable.find(p =&gt; p.path == data.path);</span><br><span class="line">        <span class="keyword">if</span> (route) &#123;</span><br><span class="line">          <span class="keyword">if</span> (data.mode == <span class="string">'history'</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data.isPush) &#123;</span><br><span class="line">              //更改url---后退、前进不更改</span><br><span class="line">              <span class="keyword">if</span> (data.isReplace) &#123;</span><br><span class="line">                window.history.replaceState(data.path, <span class="string">''</span>, data.path)</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                window.history.pushState(data.path, <span class="string">''</span>, data.path)</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (data.mode == <span class="string">'hash'</span>) &#123;</span><br><span class="line">            location.hash = data.path</span><br><span class="line">          &#125;</span><br><span class="line">          //更新html</span><br><span class="line">          document.querySelector(<span class="string">"#routerView"</span>).innerHTML = document.querySelector(route.component).innerHTML</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
